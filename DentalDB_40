
/*
Dental clinics patients' info  
*/
CREATE COLUMN TABLE Patients
(
	patient_id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
	surname NVARCHAR(25) NOT NULL,
	name nvarchar(25) NOT NULL,
	patronimic NVARCHAR(25) NOT NULL DEFAULT '',
	dob DATE NOT NULL,
	email NVARCHAR(50) NOT NULL UNIQUE,
	phone NVARCHAR(12) NOT NULL UNIQUE,
	PRIMARY KEY(patient_id)
) 

ALTER TABLE Patients ADD CONSTRAINT CK_Patients_Dob CHECK ("dob" > '1900.01.01' AND "dob" < '2150.01.01');
ALTER TABLE Patients ADD CONSTRAINT CK_Patients_Phone CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

/*
Table of banks' cards used in payments
*/
CREATE COLUMN TABLE PayCards
(
	paycard_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1),
	card_number NVARCHAR(16) NOT NULL  UNIQUE,
	card_type NVARCHAR(25) NOT NULL DEFAULT 'n\a',
	owner_surname NVARCHAR(25) NOT NULL DEFAULT 'n\a',
	owner_name NVARCHAR(25) NOT NULL DEFAULT 'n\a',
	expired_on date NOT NULL,
	PRIMARY KEY (paycard_id)
)

ALTER TABLE PayCards ADD CONSTRAINT CK_PayCards_Card_number CHECK (card_number LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');
ALTER TABLE PayCards Add CONSTRAINT CK_PayCards_Expired_on  CHECK (expired_on >= TO_VARCHAR (TO_DATE('2009-12-31'), 'YYYY-MM-DD'));

/*
Positions that are available at the clinics 
*/
CREATE /*COLUMN*/ TABLE Ocupations
(
	ocupation_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1),
	title NVARCHAR(50) UNIQUE,
	PRIMARY KEY(ocupation_id)	
)

/*
Employees' info
*/
CREATE COLUMN TABLE Employees
(
	employee_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1), 
	ocupation_id INT NOT NULL,
	surname NVARCHAR(25) NOT NULL,
	name NVARCHAR(25) NOT NULL,
	patronimic NVARCHAR(25) NOT NULL DEFAULT '',
    dob DATE NOT NULL,	
	email NVARCHAR(255) NOT NULL UNIQUE,	
	phone NVARCHAR(12) NOT NULL UNIQUE,
	PRIMARY KEY (employee_id),
	FOREIGN KEY (ocupation_id) REFERENCES Ocupations(ocupation_id) ON DELETE CASCADE
)

ALTER TABLE Employees ADD CONSTRAINT CK_Employees_Dob CHECK (dob > '1900.01.01' AND dob < '2150.01.01');
ALTER TABLE Employees ADD CONSTRAINT CK_Employees_email CHECK (dbo.CheckEmail(email) = 1);
ALTER TABLE Employees ADD CONSTRAINT CK_Employees_Phone CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

/*
available  services 
*/
CREATE COLUMN TABLE DentalServices 
(
	service_id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL, 
	ocupation_id INT NOT NULL, 
	description NVARCHAR(100) NOT NULL UNIQUE,
	price DECIMAL(8,2) NOT NULL DEFAULT '0.00',
	PRIMARY  KEY(service_id),
	FOREIGN KEY(ocupation_id) REFERENCES Ocupations(ocupation_id) ON DELETE CASCADE
)

/*
List of orders
*/
CREATE COLUMN TABLE Orders
(
	order_id INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,  
	patient_id INT NOT NULL,
	paycard_id INT NOT NULL, 
	paystatus BIT NOT NULL DEFAULT 0,	
	order_date DATE NOT NULL DEFAULT GETDATE(),
	order_time TIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 	
	PRIMARY KEY(order_id),
	FOREIGN KEY(patient_id) REFERENCES Patients(patient_id) ON DELETE CASCADE,
	FOREIGN KEY(paycard_id) REFERENCES PayCards(paycard_id) ON DELETE CASCADE
)

/*
List of order's items
*/
CREATE COLUMN TABLE OrderLines
(
	order_id INT NOT NULL,  
	line_id INT NOT NULL,    
	service_id INT NOT NULL, 
	detail_date DATE NOT NULL DEFAULT GETDATE() ,
	detail_time TIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY(order_id, line_id),
	FOREIGN KEY(order_id) REFERENCES Orders(order_id) ON DELETE CASCADE,
	FOREIGN KEY(service_id) REFERENCES DentalServices(service_id) ON DELETE CASCADE
)
---------------------END OF TABLES-------------------------------------------
